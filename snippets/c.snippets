snippet inc "#include ... " bA
#include <${1:stdio.h}>
${0}
endsnippet

snippet mm "int main(int argc, char* argv[]){ ... }" bA
int main(int argc, char* argv[])
{
	${1}
	return 0;
}
${0}
endsnippet

snippet mn "int main(void){ ... }" bA
int main(void)
{
	${1}
	return 0;
}
${0}
endsnippet

snippet fu "func funcname(arg){ ... }" bA
${1:void} ${2:name}(${3:void})
{
	${4}
}
${0}
endsnippet

snippet d "#define ..." bA
#define ${1}
${0}
endsnippet

snippet f0 "for (int i = 0; i < ... ; i++){ ... }"
for (int $1 = 0; $1 < $2; $1++){
	$3
}
$0
endsnippet

snippet fp "for (int i = ...; i < ... ; i++){ ... }"
for (int $1 = $2; $1 < $3; $1++){
	$4
}
$0
endsnippet
snippet if "if ( ... ){ ... }"
if ($1){
	$2
}
$0
endsnippet

snippet fn "for (int i = ...; i >= ...; i--){ ... }"
for (int $1 = $2; $1 >= $3; $1--) {
	$4
}
$0
endsnippet

snippet w "while ( ... ){ ... }"
while ($1){
	$2
}
$0
endsnippet

snippet s "struct ... { ... };"
struct $1 {
	$2
};
$0
endsnippet
